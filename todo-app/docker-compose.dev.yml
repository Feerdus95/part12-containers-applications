
services:
  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.dev.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - todo-network
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s

  frontend:
    build:
      context: ./todo-frontend
      dockerfile: Dockerfile.dev
    volumes:
      - ./todo-frontend:/app
      - /app/node_modules
    expose:
      - "3000"
    environment:
      - NODE_ENV=development
      - VITE_BACKEND_URL=/api
    container_name: todo-frontend-dev
    stdin_open: true
    tty: true
    networks:
      - todo-network
    depends_on:
      - backend

  backend:
    build:
      context: ./todo-backend
      dockerfile: dev.Dockerfile
    expose:
      - "3001"
    environment:
      - NODE_ENV=development
      - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      - REDIS_URL=redis://redis:6379
      - PORT=3001
      - CORS_ORIGIN=http://localhost,http://localhost:80,http://frontend:3000
      - TRUST_PROXY=loopback,linklocal,uniquelocal
      - DEBUG=*
    volumes:
      - ./todo-backend:/usr/src/app
      - /usr/src/app/node_modules
    working_dir: /usr/src/app
    networks:
      - todo-network
    depends_on:
      - mongo
      - redis
    command: >
      sh -c "
        echo 'Starting backend service...' &&
        nodemon --legacy-watch ./bin/www
      "

  mongo:
    image: mongo:4.4
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=the_username
      - MONGO_INITDB_ROOT_PASSWORD=the_password
      - MONGO_INITDB_DATABASE=the_database
    volumes:
      - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017/test --quiet
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - todo-network

  redis:
    image: redis:6.2
    ports:
      - "26379:6379"
    command: ['redis-server', '--appendonly', 'yes']
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - todo-network

  debug-helper:
    image: busybox
    container_name: debug-helper
    networks:
      - todo-network

networks:
  todo-network:
    driver: bridge

volumes:
  mongodb_data:
  redis_data:
